<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[将hexo托管到github]]></title>
    <url>%2F2019%2F07%2F11%2F%E5%B0%86hexo%E6%89%98%E7%AE%A1%E5%88%B0github%2F</url>
    <content type="text"><![CDATA[将hexo博客和文章源码同步到github，以便多平台同步，或者电脑文件丢失后的恢复 1、建立新的分支在github上存放静态网页的仓库中创建新的分支source，并将其设置为默认仓库，用来存放源码 2、克隆到本地仓库在hexo主目录下面克隆仓库 1$git clone https://github.com/changxiaoxin/Changxiaoxin.github.io.git 我们克隆仓库分支只是需要其中的.git管理文件，其他的网页文件是不需要的，所以进入刚刚克隆的文件夹，把.git文件夹复制到hexo主目录，然后就可以删除克隆的文件夹 3、命名远程仓库刚刚接触github，我也不知道这一步到底官方是怎么叫的，我就以自己的理解写的（有不对的地方欢迎指正） 1$git remote git remote add origin https://github.com/ChangXiaoxin/ChangXiaoxin.github.io.git 4、向本地仓库中添加文件1$git add -f ./* //加-f参数可以把全部文件都添加进来 这样可以把hexo主目录的文件都添加进来（可能会有嵌入git仓库的提示，是因为有的插件或者主题是直接clone的git仓库，把对应的.git文件删掉就好了） 5、同步到github端12$git commit -m "..."$git push origin source 以上代码可以把本地仓库同步到github 6、博客变更操作每次写好文章后把文章添加同步到git仓库，然后重新部署网站 1234567$git add ./*$git commit -m "..."$git push origin source//同步源码信息$hexo g$hexo d//重新部署静态网站 以上]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F07%2F10%2Ftest%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[博客相关网站记录]]></title>
    <url>%2F2019%2F07%2F10%2F%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[域名提供商GoDaddy 微信扫码登录，绑定qq邮箱 https://dcc.godaddy.com 域名dns管理DNSPod 微信扫码登录 https://www.dnspod.cn 网站数据统计百度统计 百度统一账号登录（手机号） https://tongji.baidu.com]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RGB调光小夜灯]]></title>
    <url>%2F2019%2F07%2F10%2FRGB%E8%B0%83%E5%85%89%E5%B0%8F%E5%A4%9C%E7%81%AF%2F</url>
    <content type="text"><![CDATA[许多人晚上睡觉的时候都喜欢留一盏昏黄的夜灯，在昏黄的氛围中安然睡去，享受美好的睡眠，仿佛没有了它就无法入睡，缺少安全感一样。今天我们就带领大家制作一款颜色可调的小夜灯，无论你喜欢什么颜色，它都能满足你的需求。它以arduino开源硬件为主控，通过三个按钮来控制RGB-LED的颜色，并且还有独立的可充电锂电池，可以摆脱电源线的限制，轻轻松松享受高品质生活。接下来就跟我一起动手制作吧。 所需材料 3D打印外壳 Android mini pro控制器 RGB-LED模块 微动按键 TP4056充电模块 200mAh锂电池 细导线若干 自锁开关 连接示意图： 制作过程将Arduino控制板与USB转TTL转接板连在一起然后插入电脑USB口中，连接方式如下 Arduino控制板 USB转TTL VCC VCC GND GND RXD TXD TXD RXD 注意：arduino与USB转TTL的RXD、TXD连接方式 2、将下载好的RGB程序下载到Arduino控制扳里首先在Arduino IDE里打开程序，点击工具选择板卡（Arduino Nano）和端口然后点击代码框上方向右箭头即可自动编译上传代码（当编译完成，代码框下面出现上传字样时按下Arduino控制板上的复位按钮即可下载，这一步可能会不成功，多试几次就行了） 下载成功后IDE显示如下： 3、焊接RGB-LED灯 4、焊接按键 5、焊接电池和充电板 6、焊接开关 7、功能测试 8、装进外壳 9、最终成果 写在最后这个小夜灯是可充电设计，底部有micro-usb口，可以用安卓数据线进行充电。底部还有三个黑色按键和一个开关，开关控制小夜灯的开启和关闭；中间的黑色按键为颜色切换功能，按一次切换一个颜色（红蓝绿循环切换），左边和右边的按键可以调节已选颜色的亮度，通过三种颜色不同亮度的组合来选择不同的颜色。而且此小夜灯具有颜色记忆功能，下一次开启时自动切换到上一次关闭时的颜色状态。 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111#include&lt;EEPROM.h&gt;#define PIN_RED 9 //定义红色接口#define PIN_GREEN 10 //定义绿色接口#define PIN_BLUE 11 //定义蓝色接口#define button_inc 8 //定义按键#define button_shift 7#define button_dec 6int red = 0;int green = 0;int blue = 0;int keyflag = 0;int keycounter_inc = 0;int keycounter_shift = 0;int keycounter_dec = 0;int color_set = 1;int key_inc = 0;int key_shift = 0;int key_dec = 0;int key_value_old = 0;long timer = 0;void setup() &#123; // put your setup code here, to run once: pinMode(PIN_RED, OUTPUT); pinMode(PIN_GREEN, OUTPUT); pinMode(PIN_BLUE, OUTPUT); pinMode(button_inc,INPUT_PULLUP); //初始化按键 pinMode(button_shift,INPUT_PULLUP); //初始化按键 pinMode(button_dec,INPUT_PULLUP); //初始化按键 red = EEPROM.read(1); green = EEPROM.read(2); blue = EEPROM.read(3);&#125;void keyscan()&#123;//按键扫描程序 keyflag = 0; //清空按键扫描标志 if(digitalRead(button_inc) == LOW)&#123; //检测按键按下 keycounter_inc++; //软件消抖 if(keycounter_inc &gt;= 150)&#123;//消抖之后改变按键值 key_inc = 1; keycounter_inc = 0; //清空消抖计时 &#125; &#125; if(digitalRead(button_shift) == LOW)&#123; //检测按键按下 keycounter_shift++; //软件消抖 if(keycounter_shift &gt;= 150)&#123;//消抖之后改变按键值 key_shift = 1; keycounter_shift = 0; //清空消抖计时 &#125; &#125; if(digitalRead(button_dec) == LOW)&#123; //检测按键按下 keycounter_dec++; //软件消抖 if(keycounter_dec &gt;= 150)&#123;//消抖之后改变按键值 key_dec = 1; keycounter_dec = 0; //清空消抖计时 &#125; &#125; &#125;void colorRGB(int r,int g,int b)&#123; analogWrite(PIN_RED,r); analogWrite(PIN_GREEN,g); analogWrite(PIN_BLUE,b); &#125;void keydo()&#123; if(key_inc == 1)&#123; key_inc = 0; switch(color_set)&#123; case 1:red = red + 25;if(red &gt; 225)red = 0;break; case 2:green = green + 25;if(green &gt; 225)green = 0;break; case 3:blue = blue + 25;if(blue &gt; 225)blue = 0;break; default:break; &#125; &#125; if(key_shift == 1)&#123; key_shift = 0; color_set++; if(color_set &gt;= 4)color_set = 1; &#125;if(key_dec == 1)&#123; key_dec = 0; switch(color_set)&#123; case 1:red = red - 25;if(red &lt; 0)red = 255;break; case 2:green = green - 25;if(green &lt; 0)green = 255;break; case 3:blue = blue - 25;if(blue &lt; 0)blue = 255;break; default:break; &#125;&#125;colorRGB(red,green,blue);EEPROM.write(1,red);EEPROM.write(2,green);EEPROM.write(3,blue);&#125;void loop() &#123;// put your main code here, to run repeatedly:if(millis() - timer &gt;= 1)&#123; timer = millis(); keyflag++; keycounter_inc++; keycounter_shift++; keycounter_dec++; if (keyflag &gt;= 1)keyscan(); //按键扫描程序，扫描间隔1ms&#125;keydo();&#125; 以上]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[powerFilter]]></title>
    <url>%2F2019%2F07%2F09%2FpowerFilter%2F</url>
    <content type="text"><![CDATA[电源滤波电容 频率范围（Hz） 电容取值 DC-100k 10uf以上钽电容或铝电解电容 100K-10M 100nf(0.1uf)陶瓷电容 10M-100M 10nf(0.01uf)陶瓷电容 &gt;100M 1nf(0.001uf)陶瓷电容和PCB的地平面与电源的平面电容 注意：电源滤波很重要，有时候电路出现异常情况查找不到原因加上电源滤波也许就能解决问题！！！]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hardware</tag>
      </tags>
  </entry>
</search>
